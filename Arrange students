import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'arrangeStudents' function below.
     *
     * The function is expected to return a STRING.
     * The function accepts following parameters:
     *  1. INTEGER_ARRAY a
     *  2. INTEGER_ARRAY b
     */

    public static String arrangeStudents(List<Integer> a, List<Integer> b) {
    // Write your code here
        
        ArrayList<Integer> arr=new ArrayList<>();
        ArrayList<Integer> c=new ArrayList<>();
       int sum1=0,sum2=0;
        for(int i=0;i<a.size();i++){
           sum1+= a.get(i);
        }   
        for(int i=0;i<a.size();i++){
           sum2+= b.get(i);
        }  
        if(sum1<sum2){
            while(a.size()!=0){
                arr.add(Collections.min(a));
                a.remove(Collections.min(a));
                arr.add(Collections.min(b));
                b.remove(Collections.min(b));
            }
        }
        else
        {
             while(a.size()!=0){
                arr.add(Collections.min(b));
                b.remove(Collections.min(b));
                arr.add(Collections.min(a));
                a.remove(Collections.min(a));
            }
        }
        c.addAll(arr);
        Collections.sort(c);
        if(c.equals(arr)) return "YES";
        else return "NO";
     
   
    

    }


    }



public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int t = Integer.parseInt(bufferedReader.readLine().trim());

        IntStream.range(0, t).forEach(tItr -> {
            try {
                int n = Integer.parseInt(bufferedReader.readLine().trim());

                List<Integer> a = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
                    .map(Integer::parseInt)
                    .collect(toList());

                List<Integer> b = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
                    .map(Integer::parseInt)
                    .collect(toList());

                String result = Result.arrangeStudents(a, b);

                bufferedWriter.write(result);
                bufferedWriter.newLine();
            } catch (IOException ex) {
                throw new RuntimeException(ex);
            }
        });

        bufferedReader.close();
        bufferedWriter.close();
    }
}
